class {
  onCreate(input) {
    this.state = {
      currentPage: 1,
      itemsPerPage: 12,
      allItems: input.salesData,
      currentItems: [],
    };
    this.getPaginatedItems();
  }

  getPaginatedItems() {
    const startIndex = (this.state.currentPage - 1) * this.state.itemsPerPage;
    const endIndex = startIndex + this.state.itemsPerPage;
    this.state.currentItems = this.state.allItems.slice(startIndex, endIndex);
  }

  onShowNextPage() {
    if (this.state.currentPage < Math.ceil(this.state.allItems.length / this.state.itemsPerPage)) {
      this.state.currentPage++;
      this.getPaginatedItems();
    }
  }

  onShowPrevPage() {
    if (this.state.currentPage > 1) {
      this.state.currentPage--;
      this.getPaginatedItems();
    }
  }
}

//name=tab.name total=tab.total timestamp=tab.timestamp orders=tab.items

<div class="container">
    <h2 class="text-center my-4">Tabs:</h2>
      <ul class="list-unstyled d-flex flex-wrap justify-content-between">
        <for|tab| of=state.currentItems>
          <tab key=tab.id tabData=tab />
        </for>
      </ul>
    <nav class="pagination justify-content-center align-items-center pb-3" >
      <button class="page-link rounded mb-2 mx-2" on-click("onShowPrevPage")>Previous</button>
      <p class="mb-2">Page ${state.currentPage} of ${Math.ceil(state.allItems.length / state.itemsPerPage)}</p>
      <button class="page-link rounded mb-2 mx-2" on-click("onShowNextPage")>Next</button>
    </nav>
</div>

<style>
  .tab-box {
    width: 250px;
    height: 150px
  }
  .bg-blue {
    background-color: #e5eefa;
  }
</style>